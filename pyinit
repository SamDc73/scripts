target-version = "py310"
#!/bin/bash

# Get the current directory name as default and clean it up
dir_name=$(basename "$PWD")
# Capitalize first letter of each word and remove spaces/special chars
clean_name=$(echo "$dir_name" | sed -r 's/(^|[^a-zA-Z])([a-z])/\1\u\2/g' | sed 's/[^a-zA-Z0-9]//g')

# Prompt for project name
read -p "Enter project name (press Enter to use '$dir_name'): " project_name

# If no input, use directory name
if [ -z "$project_name" ]; then
    project_name=$dir_name
fi

# Create virtual environment
echo "Creating virtual environment..."
uv venv .venv

# Create .envrc
echo "Creating .envrc..."
echo "source .venv/bin/activate" > .envrc

# Allow direnv
echo "Allowing direnv..."
direnv allow .

# Create pyproject.toml
echo "Creating pyproject.toml..."
cat > pyproject.toml << EOL
[project]
name = "$project_name"
version = "0.1.0"
description = ""

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "ANN101", "ANN102", "E501"]
fixable = ["ALL"]
logger-objects = ["logging_setup.logger"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"

[tool.mypy]
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
follow_imports = "silent"
show_column_numbers = true
EOL

# Install requirements if they exist
if [ -f "requirements.txt" ]; then
    echo "Installing requirements from requirements.txt..."
    uv pip install -r requirements.txt
elif [ -f "pyproject.toml" ]; then
    echo "Installing requirements from pyproject.toml..."
    uv pip install .
fi

echo "Project $project_name initialized successfully!"
